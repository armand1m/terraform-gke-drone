kind: pipeline
type: kubernetes
name: "Terraform Acceptance"

    
steps:
- name: install-terraform
  image: google/cloud-sdk:latest
  commands:
  - apt install unzip -y
  - curl -L0 https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip --output terraform.zip
  - unzip ./terraform.zip
- name: prepare-environment
  image: google/cloud-sdk:alpine
  environment:
    GITHUB_CLIENT_ID:
      from_secret: github-client-id
    GITHUB_CLIENT_SECRET:
      from_secret: github-client-secret
    TERRAFORM_STATE_BUCKET_NAME:
      from_secret: terraform-state-bucket-name
    TERRAFORM_STATE_PREFIX:
      from_secret: terraform-state-prefix
  commands:
  - ./terraform init 
  - >
    cat > ./variables.tfvars <<EOL
      gcloud_region              = "us-central1"
      gcloud_zone                = "us-central1-c"
      drone_github_client_id     = "$GITHUB_CLIENT_ID"
      drone_github_client_secret = "$GITHUB_CLIENT_SECRET"
    EOL
  - >
    cat > ./backend.tfvars <<EOL
      bucket  = "$TERRAFORM_STATE_BUCKET_NAME"
      prefix  = "$TERRAFORM_STATE_PREFIX"
    EOL
- name: terraform-plan
  image: google/cloud-sdk:alpine
  environment:
    TERRAFORM_SERVICE_ACCOUNT:
      from_secret: terraform-service-account
  commands:
  - echo $TERRAFORM_SERVICE_ACCOUNT | gcloud auth activate-service-account --key-file=-
  - gcloud container clusters get-credentials drone-cluster --zone us-central1-c
  - ./terraform plan -var-file=./variables.tfvars
- name: terraform-apply
  image: google/cloud-sdk:alpine
  commands:
  - ./terraform apply -var-file=./variables.tfvars
  when:
    branch:
    - master
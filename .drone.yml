kind: pipeline
type: kubernetes
name: "Terraform Acceptance"

    
steps:
- name: install-terraform
  image: google/cloud-sdk:latest
  commands:
  - apt install unzip -y
  - curl -L0 https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip --output terraform.zip
  - unzip ./terraform.zip
- name: install-kubectl
  image: google/cloud-sdk:alpine
  commands:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
- name: test-manifest
  image: google/cloud-sdk:alpine
  environment:
    TERRAFORM_SERVICE_ACCOUNT:
      from_secret: terraform-service-account
    TERRAFORM_SERVICE_ACCOUNT_NAME:
      from_secret: terraform-service-account-name
    GCLOUD_PROJECT_NAME:
      from-secret: gcloud-project-name
    GITHUB_CLIENT_ID:
      from_secret: github-client-id
    GITHUB_CLIENT_SECRET:
      from_secret: github-client-secret
  commands:
  - echo $TERRAFORM_SERVICE_ACCOUNT | gcloud auth activate-service-account --key-file=-
  - ./terraform init 
  - >
    cat > ./variables.tfvars <<EOL
      gcloud_region              = "us-central1"
      gcloud_zone                = "us-central1-c"
      drone_github_client_id     = "$GITHUB_CLIENT_ID"
      drone_github_client_secret = "$GITHUB_CLIENT_SECRET"
    EOL
  - cat ./variables.tfvars
  - gcloud container clusters get-credentials drone-cluster --zone us-central1-c
  - ./terraform plan -var-file=./variables.tfvars